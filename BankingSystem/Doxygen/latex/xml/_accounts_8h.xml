<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_accounts_8h" kind="file" language="C++">
    <compoundname>Accounts.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="main_8cpp" local="no">C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/main.cpp</includedby>
    <includedby refid="_accounts_8cpp" local="yes">C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/src/Accounts.cpp</includedby>
    <includedby refid="_security_8cpp" local="yes">C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/src/Security.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/include/Accounts.h</label>
        <link refid="_accounts_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/include/Accounts.h</label>
        <link refid="_accounts_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/src/Security.cpp</label>
        <link refid="_security_8cpp"/>
      </node>
      <node id="3">
        <label>C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/src/Accounts.cpp</label>
        <link refid="_accounts_8cpp"/>
      </node>
      <node id="2">
        <label>C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_accounts" prot="public">Accounts</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ACCOUNTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACCOUNTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_accounts" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_accounts" kindref="compound">Accounts</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="class_accounts" kindref="compound">Accounts</ref>();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_accounts" kindref="compound">Accounts</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetAllAccounts();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetAccount(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetAccountBalance(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertAccount(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>accountNumber,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>accountType,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>customerName,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>accountBalance);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AcountExists(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Deposit<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a<sp/>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>amount);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Withdraw<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a<sp/>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>amount);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreditDecision(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>income,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>creditScore,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>creditHistory);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ACCOUNTS_H</highlight></codeline>
    </programlisting>
    <location file="C:/Users/cb05314/Documents/TSU/CPPT/BankingSystem/include/Accounts.h"/>
  </compounddef>
</doxygen>
